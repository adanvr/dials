% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/param_set.R
\name{attach_param}
\alias{attach_param}
\alias{attach_values_param}
\alias{attach_range_param}
\title{Attach a parameter to a \code{param_set}}
\usage{
attach_param(param_set, param, id = NA)

attach_values_param(param_set, name, values, id = NA)

attach_range_param(param_set, name, min, max, id = NA)
}
\arguments{
\item{param_set}{A \code{param_set}.}

\item{param}{A single dials \code{param} object (such as \code{\link[=mtry]{mtry()}}) to add to the
\code{param_set}.}

\item{id}{An optional single \code{character} \code{id}. This is generally \emph{not} needed,
and is only useful if you have multiple parameters of the same name in the
\code{param_set} (for example, it might be useful to have a \code{\link[=num_comp]{num_comp()}} parameter
that will be used with a PCA recipes step, and a \code{\link[=num_comp]{num_comp()}} parameter
that will be used with a PLS recipes step all in the same \code{param_set}).}

\item{name}{A single \code{character} used for the name (and label) of the parameter
generated dynamically.}

\item{values}{A \code{list} of values that should be used as values of the
parameter.}

\item{min}{A single \code{integer} or \code{double} value used to set the minimum
value of the range of the new parameter object. Should be of the same class
as \code{max}.}

\item{max}{A single \code{integer} or \code{double} value used to set the maximum
value of the range of the new parameter object. Should be of the same class
as \code{min}.}
}
\description{
\itemize{
\item \code{attach_param()} adds a dials \code{param} object to a \code{param_set}.
\item \code{attach_values_param()} constructs a custom qualitative dials parameter
on the fly, and adds it to the \code{param_set}.
\item \code{attach_range_param()} constructs a custom quantitative dials parameter
on the fly, and adds it to the \code{param_set}.
}
}
\details{
\code{attach_values_param()} constructs a \code{\link[=new_qual_param]{new_qual_param()}} with \code{type = "list"}.
This is very flexible, and any type of value can be stored inside the list.

\code{attach_range_param()} constructs a \code{\link[=new_quant_param]{new_quant_param()}} with the type
determined from the \code{min} and \code{max} arguments. The \code{inclusive} argument
is set to \code{TRUE}, and there is no \code{trans} allowed. If you require that
flexibility, construct a full dials parameter yourself using
\code{\link[=new_quant_param]{new_quant_param()}} and use that instead.
}
\examples{

ps <- param_set()

# Attaching dials parameters
ps_2 <- ps \%>\%
  attach_param(penalty()) \%>\%
  attach_param(mixture())

# Generate a `tbl_grid` using the defaults (type = "regular" and 10 levels
# per parameter)
ps_2 \%>\%
  grid_generate()

}
\seealso{
Other parameter set functions: \code{\link{grid_assign_regular}},
  \code{\link{grid_generate}}, \code{\link{gridify}},
  \code{\link{param_set}}
}
\concept{parameter set functions}
