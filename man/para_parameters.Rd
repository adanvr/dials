% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/parameters.R
\docType{data}
\name{dropout}
\alias{dropout}
\alias{para_parameters}
\alias{epochs}
\alias{activation}
\alias{mixture}
\alias{penalty}
\alias{rbf_sigma}
\alias{prod_degree}
\alias{num_terms}
\alias{num_comp}
\alias{cost}
\alias{scale_factor}
\alias{margin}
\alias{degree}
\alias{deg_free}
\alias{hidden_units}
\alias{batch_size}
\alias{prune_method}
\title{Parameter functions related to parametric models.}
\format{An object of class \code{qual_param} (inherits from \code{param}) of length 5.}
\usage{
dropout(range = c(0, 1), trans = NULL)

epochs(range = c(1L, 1000L), trans = NULL)

activation(values = c("linear", "softmax", "relu", "elu"))

mixture(range = c(0, 1), trans = NULL)

penalty(range = c(-10, 0), trans = log10_trans())

rbf_sigma(range = c(-10, 0), trans = log10_trans())

prod_degree(range = c(1L, 2L), trans = NULL)

num_terms(range = c(1L, unknown()), trans = NULL)

num_comp(range = c(1L, unknown()), trans = NULL)

cost(range = c(-10, -1), trans = log2_trans())

scale_factor(range = c(-10, -1), trans = log2_trans())

margin(range = c(0, 0.2), trans = NULL)

degree(range = c(1, 3), trans = NULL)

deg_free(range = c(1, 5), trans = NULL)

hidden_units(range = c(1L, 10), trans = NULL)

batch_size(range = c(unknown(), unknown()), trans = log2_trans())

prune_method
}
\arguments{
\item{range}{A two-element vector holding the smallest and largest possible
values, respectively. If these cannot be set when the parameter is created,
\code{unknown()} can be used instead of a particular value. If a transformation
is specified, these should be in the \emph{transformed units}. The default is
an educated guess at the range of each parameter.}

\item{trans}{A \code{trans} object from the \code{scales} package, such as
\code{scales::log10_trans()} or \code{scales::reciprocal_trans()}. If not provided,
the default is used which matches the units used in \code{range}. If no
transformation, \code{NULL}.}

\item{values}{A vector of possible parameter values. For qualitative
parameters, character and logical defaults have been set, but can be modified
as needed.}
}
\value{
A \code{param} object. The underlying functions that generate the parameters are
\code{\link[=new_quant_param]{new_quant_param()}} and \code{\link[=new_qual_param]{new_qual_param()}}.
}
\description{
These are parameter generating functions that can be used for modeling,
especially in conjunction with the \pkg{parsnip} package.
}
\details{
These functions generate parameters that are useful when the model is based
on some type of slope/intercept model.
\itemize{
\item \code{penalty()}: The total amount of regularization used.
(See \code{parsnip::linear_reg()} and \code{parsnip::logistic_reg()}
with glmnet models).
\item \code{mixture()}: The proportion of L1 regularization in the model.
(See \code{parsnip::linear_reg()} and \code{parsnip::logistic_reg()}).
\item \code{dropout()}: The parameter dropout rate. (See \code{parsnip:::mlp()}).
\item \code{epochs()}: The number of iterations of training. (See \code{parsnip:::mlp()}).
\item \code{activation()}: The type of activation function between network layers.
(See \code{parsnip:::mlp()}).
\item \code{hidden_units()}: The number of hidden units in a network layer.
(See \code{parsnip:::mlp()}).
\item \code{batch_size()}: The mini-batch size for neural networks.
\item \code{rbf_sigma()}: The sigma parameters of a radial basis function.
\item \code{cost()}: A cost value for SVM models.
\item \code{scale_factor()}: The polynomial and hyperbolic tangent kernel
scaling factor.
\item \code{margin()}: The SVM margin parameter (e.g. epsilon in the insensitive-loss
function for regression).
\item \code{degree()}: The polynomial degree.
\item \code{prod_degree()}: The number of terms to combine into interactions.
A value of 1 implies an additive model. Useful for MARS models.
\item \code{num_terms()}: A nonspecific parameter for the number of terms in a model.
This can be used with models that include feature selection, such as MARS.
\item \code{num_comp()}: The number of components in a model
(e.g. PCA or PLS components).
\item \code{deg_free()}: A parameter for the degrees of freedom.
\item \code{prune_method()}: A parameter for pruming methods for MARS.
}
}
\keyword{datasets}
